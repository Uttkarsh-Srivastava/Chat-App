{"ast":null,"code":"import _slicedToArray from \"/home/uttkarsh/Desktop/Node/realtime_chat/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/uttkarsh/Desktop/Node/realtime_chat/frontend/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        room = _useState4[0],\n        setRoom = _useState4[1];\n\n  const _use = use,\n        _use2 = _slicedToArray(_use, 2),\n        message = _use2[0],\n        setMessage = _use2[1];\n\n  const ENDPOINT = \"localhost:5000\";\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    setName(name);\n    setRoom(room);\n    socket = io(ENDPOINT);\n    socket.emit(\"join\", {\n      name,\n      room\n    }, ({\n      error\n    }) => {\n      console.log(error);\n    });\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {});\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Chat\"));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/uttkarsh/Desktop/Node/realtime_chat/frontend/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","location","name","setName","room","setRoom","use","message","setMessage","ENDPOINT","parse","search","emit","error","console","log","off","on"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,oBACNN,QAAQ,CAAC,EAAD,CADF;AAAA;AAAA,QACvBO,IADuB;AAAA,QACjBC,OADiB;;AAAA,qBAENR,QAAQ,CAAC,EAAD,CAFF;AAAA;AAAA,QAEvBS,IAFuB;AAAA,QAEjBC,OAFiB;;AAAA,eAGJC,GAHI;AAAA;AAAA,QAGxBC,OAHwB;AAAA,QAGhBC,UAHgB;;AAI9B,QAAMC,QAAQ,GAAG,gBAAjB;AAEAb,EAAAA,SAAS,CAAC,MAAM;AAAA,+BACQC,WAAW,CAACa,KAAZ,CAAkBT,QAAQ,CAACU,MAA3B,CADR;AAAA,UACPT,IADO,sBACPA,IADO;AAAA,UACDE,IADC,sBACDA,IADC;;AAEfD,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAL,IAAAA,MAAM,GAAGD,EAAE,CAACW,QAAD,CAAX;AACAV,IAAAA,MAAM,CAACa,IAAP,CAAY,MAAZ,EAAoB;AAAEV,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAoC,CAAC;AAAES,MAAAA;AAAF,KAAD,KAAe;AAClDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,KAFD;AAGA,WAAO,MAAM;AACZd,MAAAA,MAAM,CAACa,IAAP,CAAY,YAAZ;AACAb,MAAAA,MAAM,CAACiB,GAAP;AACA,KAHD;AAIA,GAZQ,EAYN,CAACP,QAAD,EAAWR,QAAQ,CAACU,MAApB,CAZM,CAAT;AAcAf,EAAAA,SAAS,CAAC,MAAM;AACfG,IAAAA,MAAM,CAACkB,EAAP,CAAU,SAAV,EAAsBV,OAAD,IAAa,CAEjC,CAFD;AAGA,GAJQ,CAAT;AAKA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CADD;AAKA,CA9BD;;AAgCA,eAAeP,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\n\nlet socket;\nconst Chat = ({ location }) => {\n\tconst [name, setName] = useState(\"\");\n\tconst [room, setRoom] = useState(\"\");\n\tconst[message,setMessage]=use\n\tconst ENDPOINT = \"localhost:5000\";\n\n\tuseEffect(() => {\n\t\tconst { name, room } = queryString.parse(location.search);\n\t\tsetName(name);\n\t\tsetRoom(room);\n\t\tsocket = io(ENDPOINT);\n\t\tsocket.emit(\"join\", { name, room }, ({ error }) => {\n\t\t\tconsole.log(error);\n\t\t});\n\t\treturn () => {\n\t\t\tsocket.emit(\"disconnect\");\n\t\t\tsocket.off();\n\t\t};\n\t}, [ENDPOINT, location.search]);\n\n\tuseEffect(() => {\n\t\tsocket.on('message', (message) => {\n\t\t\t\n\t\t})\n\t})\n\treturn (\n\t\t<div>\n\t\t\t<h1>Chat</h1>\n\t\t</div>\n\t);\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}