{"ast":null,"code":"import _slicedToArray from \"/home/uttkarsh/Desktop/Node/realtime_chat/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/uttkarsh/Desktop/Node/realtime_chat/frontend/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport \"./Chat.css\";\nimport InfoBar from \"../InfoBar/InfoBar\";\nimport Input from \"../Input/Input\";\nimport Messages from \"../Messages/Messages\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        room = _useState4[0],\n        setRoom = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        message = _useState6[0],\n        setMessage = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        messages = _useState8[0],\n        setMessages = _useState8[1];\n\n  const ENDPOINT = \"localhost:5000\";\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    setName(name);\n    setRoom(room);\n    socket = io(ENDPOINT);\n    socket.emit(\"join\", {\n      name,\n      room\n    }, error => {\n      console.log(error);\n    });\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n    }\n  };\n\n  console.log(message, messages);\n  return React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(InfoBar, {\n    room: room,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/uttkarsh/Desktop/Node/realtime_chat/frontend/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","Messages","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","error","console","log","off","on","sendMessage","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport \"./Chat.css\";\nimport InfoBar from \"../InfoBar/InfoBar\";\nimport Input from \"../Input/Input\";\nimport Messages from \"../Messages/Messages\";\n\nlet socket;\n\nconst Chat = ({ location }) => {\n\tconst [name, setName] = useState(\"\");\n\tconst [room, setRoom] = useState(\"\");\n\tconst [message, setMessage] = useState(\"\");\n\tconst [messages, setMessages] = useState([]);\n\n\tconst ENDPOINT = \"localhost:5000\";\n\n\tuseEffect(() => {\n\t\tconst { name, room } = queryString.parse(location.search);\n\t\tsetName(name);\n\t\tsetRoom(room);\n\t\tsocket = io(ENDPOINT);\n\t\tsocket.emit(\"join\", { name, room }, error => {\n\t\t\tconsole.log(error);\n\t\t});\n\t\treturn () => {\n\t\t\tsocket.emit(\"disconnect\");\n\t\t\tsocket.off();\n\t\t};\n\t}, [ENDPOINT, location.search]);\n\n\tuseEffect(() => {\n\t\tsocket.on(\"message\", message => {\n\t\t\tsetMessages([...messages, message]);\n\t\t});\n\t}, [messages]);\n\n\tconst sendMessage = e => {\n\t\te.preventDefault();\n\t\tif (message) {\n\t\t\tsocket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n\t\t}\n\t};\n\n\tconsole.log(message, messages);\n\n\treturn (\n\t\t<div className='outerContainer'>\n\t\t\t<div className='container'>\n\t\t\t\t<InfoBar room={room} />\n\t\t\t\t<Messages messages={messages} name={name}/>\n\t\t\t\t<Input\n\t\t\t\t\tmessage={message}\n\t\t\t\t\tsetMessage={setMessage}\n\t\t\t\t\tsendMessage={sendMessage}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}